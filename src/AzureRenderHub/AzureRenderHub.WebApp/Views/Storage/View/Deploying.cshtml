@using WebApp.Config.Storage
@using AzureRenderHub.WebApp.Arm.Deploying
@using AzureRenderHub.WebApp.Config.Storage
@model WebApp.Models.Storage.Details.AssetRepositoryOverviewModel
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContext
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(HttpContext.HttpContext).RequestToken;
    }
}
@{
    ViewBag.Title = Model.Name;
}

@section Breadcrumb
    {
    <a asp-controller="Storage" asp-action="Index">Storage Repositories</a> &gt;
    <a asp-controller="Storage" asp-action="Deploying" asp-route-repoId="@Model.Name">@Model.Name</a> &gt;
    <span>
    @(Model.State == StorageState.Creating || Model.State == StorageState.Failed ? "Deploying" : "Deleting")
    </span>
}

<div class="storage-details">
    <div class="form-section">
        <div class="section-title">
            <span class="step-index">1</span>
            <div class="step-header">

                @if (Model.State == StorageState.Creating)
                {
                    <h3>Deploying the file server @Model.Name</h3>
                    <p>The File Server deployment is in progress.</p>
                }
                else if (Model.State == StorageState.Deleting)
                {
                    <h3>Deleting the file server @Model.Name</h3>
                    <p></p>
                }
                else if (Model.State == StorageState.Failed)
                {
                    <h3>Deployment of file server @Model.Name Failed</h3>
                    <p></p>
                }
            </div>
        </div>
        <div class="section-wrapper">
            <div class="section-bar"></div>
            <div class="section-content">
                <div class="form-element half">
                    <label asp-for="DeploymentName">Deployment Name</label>
                    <a href="@Model.DeploymentUrl" target="_blank">@Model.DeploymentName <i class="fa fa-external-link"></i></a>
                </div>
                @if (Model.State != StorageState.Deleting)
                {
                    <div class="form-element">
                        <label asp-for="State">Status</label>
                        <input asp-for="State" readonly="readonly" />
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@if (Model.State == StorageState.Failed)
{
    <div class="form-footer">
        <div class="button-bar">

            <a class="button" asp-action="Delete" asp-route-repoId="@Model.Name" onclick="return confirm('Are you sure you want to delete @Model.Name?')">Delete File Server <i class="fa fa-trash"></i></a>
        </div>
    </div>
}

<p>&nbsp;</p>

@if (Model.State != StorageState.Failed)
{
@section scripts
{
    <script>
        $(document).ready(function () {
            setTimeout("location.reload(true);", 5000);
        });
    </script>
}
}

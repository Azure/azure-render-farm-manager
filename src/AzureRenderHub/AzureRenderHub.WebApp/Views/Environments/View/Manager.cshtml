@using WebApp.Code.Extensions
@using WebApp.Config
@using WebApp.Config.RenderManager
@model WebApp.Models.Environments.Details.ViewEnvironmentModel
@{
    ViewBag.Title = Model.EnvironmentName;
}

@section Breadcrumb
    {
    <a asp-controller="Environments" asp-action="Index">Environments</a> &gt;
    <a asp-controller="Environments" asp-action="Details" asp-route-envId="@Model.EnvironmentName">@Model.EnvironmentName</a> &gt;
    <span>Manager Configuration</span>
}

<h2>@Model.EnvironmentName - manager config</h2>
<p>View the details of a pre-configured render farm environment.</p>

@await Html.PartialAsync("Menu/EnvironmentMainMenu", Model, new ViewDataDictionary(ViewData) { { "Step", "env" } })
@await Html.PartialAsync("Menu/EnvironmentSubMenu", Model, new ViewDataDictionary(ViewData)
{
    { "Step", 4 },
    { "Type", "view" }
})

<form method="post" enctype="multipart/form-data" role="form">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.EnvironmentName)
    @Html.HiddenFor(model => model.RenderManager)

    <div asp-validation-summary="All" class=""></div>

    <div class="form-section">
        <div class="section-title">
            <span class="step-index">4.1</span>
            <div class="step-header">
                <h3>Domain configuration</h3>
                <p>Domain settings for Windows virtual machines</p>
            </div>
        </div>
        <div class="section-wrapper">
            <div class="section-bar"></div>
            <div class="section-content">
                <div class="form-element">
                    <label></label>
                    <div class="form-check">
                        <input asp-for="JoinDomain" type="checkbox">
                        <label>Join domain</label>
                    </div>
                </div>
                <div id="DomainForm">
                    <div class="form-element">
                        <label asp-for="DomainName">Domain name</label>
                        <input asp-for="DomainName" value="@Model.DomainName" />
                        <span asp-validation-for="DomainName" class=""></span>
                    </div>
                    <div class="form-element">
                        <label asp-for="DomainWorkerOuPath">Domain OU for virtual machines</label>
                        <input asp-for="DomainWorkerOuPath" value="@Model.DomainWorkerOuPath" />
                        <span asp-validation-for="DomainWorkerOuPath" class=""></span>
                    </div>
                    <div class="form-element">
                        <label asp-for="DomainJoinUsername">Domain user to join virtual machines to domain</label>
                        <input asp-for="DomainJoinUsername" value="@Model.DomainJoinUsername" />
                        <span asp-validation-for="DomainJoinUsername" class=""></span>
                    </div>
                    <div class="form-element">
                        <label asp-for="DomainJoinPassword">Domain user password</label>
                        <input asp-for="DomainJoinPassword" value="@Model.DomainJoinPassword" type="password" />
                        <span asp-validation-for="DomainJoinPassword" class=""></span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @{
        // TODO: add partial control for these when we have the rest of the info
        switch (Model.RenderManager)
        {
            case RenderManagerType.Deadline:
                <div class="form-section">
                    <div class="section-title">
                        <span class="step-index">4.2</span>
                        <div class="step-header">
                            <h3>@Model.RenderManager.GetDescription() configuration</h3>
                            <p>Configure @Model.RenderManager.GetDescription() settings</p>
                        </div>
                    </div>
                    <div class="section-wrapper">
                        <div class="section-bar"></div>
                        <div class="section-content">
                            <div class="form-element">
                                <label asp-for="DeadlineEnvironment.WindowsDeadlineRepositoryShare">Windows Deadline repository server</label>
                                <input asp-for="DeadlineEnvironment.WindowsDeadlineRepositoryShare" value="@Model.DeadlineEnvironment.WindowsDeadlineRepositoryShare" />
                                <span asp-validation-for="DeadlineEnvironment.WindowsDeadlineRepositoryShare" class=""></span>
                                <small>The UNC path to the Deadline repository share. The share is required to install the client (if applicable) and join the slaves to groups or pools.</small>
                            </div>

                            <div class="form-element">
                                <label asp-for="DeadlineEnvironment.RepositoryUser">Repository Share Username</label>
                                <input asp-for="DeadlineEnvironment.RepositoryUser" value="@Model.DeadlineEnvironment.RepositoryUser" />
                                <span asp-validation-for="DeadlineEnvironment.RepositoryUser" class=""></span>
                                <small>The username to access the repository share, if required.</small>
                            </div>

                            <div class="form-element">
                                <label asp-for="DeadlineEnvironment.RepositoryPassword">Repository Share Password</label>
                                <input asp-for="DeadlineEnvironment.RepositoryPassword" value="@Model.DeadlineEnvironment.RepositoryPassword" type="password" />
                                <span asp-validation-for="DeadlineEnvironment.RepositoryPassword" class=""></span>
                                <small>The password to access the repository share, if required.  This is stored in Key Vault.</small>
                            </div>

                            <div class="form-element">
                                <label asp-for="DeadlineEnvironment.ExcludeFromLimitGroups">Limit Groups to exclude</label>
                                <input asp-for="DeadlineEnvironment.ExcludeFromLimitGroups" value="@Model.DeadlineEnvironment.ExcludeFromLimitGroups" />
                                <span asp-validation-for="DeadlineEnvironment.ExcludeFromLimitGroups" class=""></span>
                                <small>Comma separated list of Deadline limit groups the cloud nodes should be excluded from.  This could be used to exclude cloud nodes from license limit groups for example.</small>
                                <small>Limit groups set at the environment level will apply to all pools unless a Pool specifies its own.</small>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-section">
                    <div class="section-title">
                        <span class="step-index">4.3</span>
                        <div class="step-header">
                            <h3>@Model.RenderManager.GetDescription() Installation Parameters</h3>
                            <p>The following parameters are only required if you're installing the Deadline client with an application package.</p>
                        </div>
                    </div>
                    <div class="section-wrapper">
                        <div class="section-bar"></div>
                        <div class="section-content">
                            <div class="form-element">
                                <label></label>
                                <div class="form-check">
                                    <input asp-for="DeadlineEnvironment.InstallDeadlineClient" type="checkbox">
                                    <label>I'll be installing Deadline with a Package</label>
                                </div>
                            </div>
                            <div id="DeadlineInstallationForm" class="master-component">
                                <div class="form-element">
                                    <label asp-for="DeadlineEnvironment.LicenseMode">License Mode</label>
                                    <select asp-for="DeadlineEnvironment.LicenseMode" asp-items="Html.GetEnumSelectList<LicenseMode>()">
                                        <option selected="selected" value="">Please select</option>
                                    </select>
                                    <span asp-validation-for="DeadlineEnvironment.LicenseMode" class="" />
                                </div>
                                <div class="form-element">
                                    <label asp-for="DeadlineEnvironment.LicenseServer">Deadline License Server</label>
                                    <input asp-for="DeadlineEnvironment.LicenseServer" value="@Model.DeadlineEnvironment.LicenseServer" />
                                    <span asp-validation-for="DeadlineEnvironment.LicenseServer" class=""></span>
                                    <small>e.g. 27008@10.2.0.6</small>
                                </div>
                                <div class="form-element">
                                    <label asp-for="DeadlineEnvironment.DeadlineRegion">Deadline Region</label>
                                    <input asp-for="DeadlineEnvironment.DeadlineRegion" value="@Model.DeadlineEnvironment.DeadlineRegion" />
                                    <span asp-validation-for="DeadlineEnvironment.DeadlineRegion" class=""></span>
                                    <small>An existing Deadline region</small>
                                </div>
                            </div>
                            <div class="form-element master-component">
                                <label></label>
                                <div class="form-check">
                                    <input asp-for="DeadlineEnvironment.RunAsService" type="checkbox">
                                    <label>Run Client as Service</label>
                                </div>
                            </div>
                            <div id="DeadlineServiceForm">
                                <div class="form-element">
                                    <label asp-for="DeadlineEnvironment.ServiceUser">Service Username</label>
                                    <input asp-for="DeadlineEnvironment.ServiceUser" value="@Model.DeadlineEnvironment.ServiceUser" />
                                    <span asp-validation-for="DeadlineEnvironment.ServiceUser" class=""></span>
                                    <small>The existing user to run the Deadline client service under.  Typically this is required when the nodes will join a domain and you want to run the client service as a domain user.</small>
                                </div>
                                <div class="form-element">
                                    <label asp-for="DeadlineEnvironment.ServicePassword">Service Password</label>
                                    <input asp-for="DeadlineEnvironment.ServicePassword" value="@Model.DeadlineEnvironment.ServicePassword" type="password" />
                                    <span asp-validation-for="DeadlineEnvironment.ServicePassword" class=""></span>
                                </div>
                            </div>
                            <div class="form-element master-component">
                                <label></label>
                                <div class="form-check">
                                    <input asp-for="DeadlineEnvironment.UseDeadlineDatabaseCertificate" type="checkbox">
                                    <label>Deadline DB requires a Certificate</label>
                                </div>
                            </div>
                            <div id="DeadlineDatabaseCertForm">
                                <div class="form-element">
                                    <label asp-for="DeadlineEnvironment.DeadlineDatabaseCertificateFileName">Current Certificate</label>
                                    <input asp-for="DeadlineEnvironment.DeadlineDatabaseCertificateFileName" value="@(Model.DeadlineEnvironment.DeadlineDatabaseCertificateFileName ?? "None")" readonly="readonly" />
                                </div>
                                <div class="form-element">
                                    <label asp-for="DeadlineEnvironment.DeadlineDatabaseCertificate">Deadline Database Client Certificate</label>
                                    <input asp-for="DeadlineEnvironment.DeadlineDatabaseCertificate" type="file" accept=".pfx" value="" />
                                    <span asp-validation-for="DeadlineEnvironment.DeadlineDatabaseCertificate" class=""></span>
                                    <small>The Deadline Database client certificate used for authentication.  The certificate and password are stored in Key Vault.</small>
                                </div>
                                <div class="form-element">
                                    <label asp-for="DeadlineEnvironment.DeadlineDatabaseCertificatePassword">Deadline Database Certificate Password</label>
                                    <input asp-for="DeadlineEnvironment.DeadlineDatabaseCertificatePassword" value="@Model.DeadlineEnvironment.DeadlineDatabaseCertificatePassword" type="password" />
                                    <span asp-validation-for="DeadlineEnvironment.DeadlineDatabaseCertificatePassword" class=""></span>
                                    <small>The Deadline Database client certificate password, if required.</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                break;
            case RenderManagerType.Qube610:
            case RenderManagerType.Qube70:
                <div class="form-section">
                    <div class="section-title">
                        <span class="step-index">4.2</span>
                        <div class="step-header">
                            <h3>@Model.RenderManager.GetDescription() configuration</h3>
                            <p>Configure @Model.RenderManager.GetDescription() settings</p>
                        </div>
                    </div>
                    <div class="section-wrapper">
                        <div class="section-bar"></div>
                        <div class="section-content">
                            <div class="form-element">
                                <label asp-for="QubeEnvironment.QubeSupervisor">Qube supervisor (only needed if installing the workers from a package)</label>
                                <input asp-for="QubeEnvironment.QubeSupervisor" value="@Model.QubeEnvironment.QubeSupervisor" />
                                <span asp-validation-for="QubeEnvironment.QubeSupervisor" class=""></span>
                            </div>
                        </div>
                    </div>
                </div>
                break;
            case RenderManagerType.Tractor2:
                <div class="form-section">
                    <div class="section-title">
                        <span class="step-index">4.2</span>
                        <div class="step-header">
                            <h3>@Model.RenderManager.GetDescription() configuration</h3>
                            <p>Configure @Model.RenderManager.GetDescription() settings</p>
                        </div>
                    </div>
                    <div class="section-wrapper">
                        <div class="section-bar"></div>
                        <div class="section-content">
                            <div class="form-element">
                                <label asp-for="TractorEnvironment.EngineIpOrHostnameAndPort">Tractor Engine IP or Hostname and Port, e.g. tractor-engine:80</label>
                                <input asp-for="TractorEnvironment.EngineIpOrHostnameAndPort" value="@Model.TractorEnvironment.EngineIpOrHostnameAndPort" />
                                <span asp-validation-for="TractorEnvironment.EngineIpOrHostnameAndPort" class=""></span>
                            </div>
                        </div>
                    </div>
                </div>
                break;
            case RenderManagerType.OpenCue:
                <div class="form-section">
                    <div class="section-title">
                        <span class="step-index">4.2</span>
                        <div class="step-header">
                            <h3>@Model.RenderManager.GetDescription() configuration</h3>
                            <p>Configure @Model.RenderManager.GetDescription() settings</p>
                        </div>
                    </div>
                    <div class="section-wrapper">
                        <div class="section-bar"></div>
                        <div class="section-content">
                            <div class="form-element">
                                <label asp-for="OpenCueEnvironment.CuebotHostnameOrIp">Cuebot IP or Hostname</label>
                                <input asp-for="OpenCueEnvironment.CuebotHostnameOrIp" value="@Model.OpenCueEnvironment.CuebotHostnameOrIp" />
                                <span asp-validation-for="OpenCueEnvironment.CuebotHostnameOrIp" class=""></span>
                            </div>

                            <div class="form-element">
                                <label asp-for="OpenCueEnvironment.Facility">OpenCue Facility Override (Optional)</label>
                                <input asp-for="OpenCueEnvironment.Facility" value="@Model.OpenCueEnvironment.Facility" />
                                <span asp-validation-for="OpenCueEnvironment.Facility" class=""></span>
                            </div>
                        </div>
                    </div>
                </div>
                break;
            case RenderManagerType.BYOS:
                <div class="form-section">
                    <div class="section-title">
                        <span class="step-index">4.2</span>
                        <div class="step-header">
                            <h3>@Model.RenderManager.GetDescription() configuration</h3>
                            <p>Configure @Model.RenderManager.GetDescription() settings</p>
                        </div>
                    </div>
                    <div class="section-wrapper">
                        <div class="section-bar"></div>
                        <div class="section-content">
                            <div class="form-element">
                                <label asp-for="BYOSEnvironment.SchedulerHostnameOrIp">Scheduler IP or Hostname and Port, e.g. myscheduler:80</label>
                                <input asp-for="BYOSEnvironment.SchedulerHostnameOrIp" value="@Model.BYOSEnvironment.SchedulerHostnameOrIp" />
                                <span asp-validation-for="BYOSEnvironment.SchedulerHostnameOrIp" class=""></span>
                            </div>
                        </div>
                    </div>
                </div>
                break;
        }
    }

    <div class="form-footer">
        <div class="button-bar">
            <input type="submit" class="" value="Update" formaction="Manager" />
        </div>
    </div>
    <p>&nbsp;</p>
</form>

@section Scripts
    {
    <script>
        $(document).ready(function () {
            // Order matters so sub-sections get enabled/disabled as expected.
            var masterCheckbox = 'DeadlineEnvironment_InstallDeadlineClient';
            registerCheckboxEnabledFormSection(masterCheckbox, "JoinDomain", "DomainForm");
            registerCheckboxEnabledFormSection(masterCheckbox, "DeadlineEnvironment_InstallDeadlineClient", "DeadlineInstallationForm");
            registerCheckboxEnabledFormSection(masterCheckbox, "DeadlineEnvironment_RunAsService", "DeadlineServiceForm");
            registerCheckboxEnabledFormSection(masterCheckbox, "DeadlineEnvironment_UseDeadlineDatabaseCertificate", "DeadlineDatabaseCertForm");


            if ('@Model.Error' !== '')
            {
                toastr.options.timeOut = 0;
                toastr.options.extendedTimeOut = 0;
                toastr.options.closeButton = true;
                toastr.options.positionClass = "toast-top-center";
                toastr.warning('@Model.ErrorMessage', '@Model.Error').css("width", "600px");
            }
        });
    </script>
}

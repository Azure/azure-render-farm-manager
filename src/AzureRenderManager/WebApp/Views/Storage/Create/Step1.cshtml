@model WebApp.Models.Storage.Create.AddAssetRepoStep1Model
@{
    ViewBag.Title = "Add Storage Configuration";
}

@section Breadcrumb
{
<a asp-controller="Storage" asp-action="Index">Storage Repositories</a> &gt;
    <span>New</span>
}

@await Html.PartialAsync("Storage/Create/CreateFormHeaderPartial")
@await Html.PartialAsync("Menu/StorageSubMenu", Model, new ViewDataDictionary(ViewData)
{
    { "Step", 1 },
    { "RepoId", Model.RepositoryName }
})

<form method="post">
    @Html.HiddenFor(model => model.OriginalName)
    @Html.AntiForgeryToken()

    <div asp-validation-summary="ModelOnly" class=""></div>
    <div class="form-section">
        <div class="section-title">
            <span class="step-index">1</span>
            <div class="step-header">
                <h3>Storage type and location</h3>
                <p>Type of storage config you want to create as well as the name and subscription details.</p>
            </div>
        </div>
        <div class="section-wrapper">
            <div class="section-bar"></div>
            <div class="section-content">
                <div class="form-element">
                    <label asp-for="RepositoryName">Storage Repository Name</label>
                    <input asp-for="RepositoryName" />
                    <span asp-validation-for="RepositoryName" class=""></span>
                </div>
                <div class="form-element">
                    <label asp-for="RepositoryType">Storage Repository Type</label>
                    <select asp-for="RepositoryType" name="RepositoryType">
                        <option value="NfsFileServer" selected>File Server</option>
                        <option value="AvereCluster" disabled="disabled">Avere Cluster - Coming Soon</option>
                    </select>
                    <span asp-validation-for="RepositoryType" class=""></span>
                </div>
                <div class="form-element">
                    <label asp-for="SubscriptionId">Subscription ID</label>
                    <div id="SubSpinner" class="async-select">
                        <select id="SubscriptionId" asp-for="SubscriptionId">
                            <option disabled selected> -- Loading Subscriptions -- </option>
                        </select>
                        <i class="fa fa-spinner fa-spin"></i>
                    </div>
                    <span asp-validation-for="SubscriptionId" class=""></span>
                </div>
                <div class="form-element">
                    <label></label>
                    <div class="form-check">
                        <input id="UseEnvironment" asp-for="UseEnvironment" value="true" type="radio">
                        <label class="form-check-label" for="UseEnvironment">Deploy Storage to specific Environment</label>
                        <small>Storage that's part of an environment will be taged and appear in the environments cost reporting.</small>
                    </div>
                    <div class="form-check">
                        <input id="UseVNet" asp-for="UseEnvironment" value="false" type="radio">
                        <label class="form-check-label" for="UseVNet">Storage will be shared by multiple Environments</label>
                        <small>Storage that isn't part of an environment will be tagged as Global and appear in the top level cost reporting.</small>
                    </div>
                </div>
                <div id="EnvironmentSection" hidden="@(!Model.UseEnvironment)">
                    <div class="form-element">
                        <label asp-for="SelectedEnvironmentName">Environment</label>
                        <select asp-for="SelectedEnvironmentName" asp-items="@(new SelectList(Model.Environments))">
                        </select>
                        <span asp-validation-for="SelectedEnvironmentName" class=""></span>
                    </div>
                </div>
                <div id="VNetSection" hidden="@Model.UseEnvironment">
                    <div class="form-element">
                        <label asp-for="SubnetResourceIdLocationAndAddressPrefix">VNet and Subnet</label>
                        <div id="SubetSpinner" class="async-select">
                            <select id="Subnets" asp-for="SubnetResourceIdLocationAndAddressPrefix">
                                <option disabled selected> -- Loading Subnets -- </option>
                            </select>
                            <i class="fa fa-spinner fa-spin"></i>
                        </div>
                        <span asp-validation-for="SubnetResourceIdLocationAndAddressPrefix" class=""></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="form-footer">
        <div class="summary"></div>
        <div class="button-bar">
            <input type="submit" class="btn btn-primary" value="Next : Configuration" formaction="Step1" />
        </div>
    </div>
</form>

@section scripts
{
    <script>
        // TODO: Add JS to a shared script file that can be minified ....
        function loadSubscriptions() {
            $("#SubSpinner").addClass("loading");
            $.get("/api/subscriptions",
                function (subscriptions) {
                    var selected = "";
                    var dropDownItems = $.map(subscriptions,
                        function (subscription) {
                            if (subscription.state !== "Enabled") {
                                return '';
                            }

                            if (subscription.subscriptionId === "@Model.SubscriptionId") {
                                selected = "selected";
                            }

                            return '<option ' + selected + ' value="' + subscription.subscriptionId + '">' + subscription.displayName + ' (' + subscription.subscriptionId + ')</option>';
                        });

                    if (!selected) {
                        dropDownItems.splice(0, 0, "<option>Please select the subscription ...</option>");
                    }

                    $("#SubscriptionId").empty().append(dropDownItems);
                    $("#SubscriptionId").val("@Model.SubscriptionId").change();
                    $("#SubSpinner").removeClass("loading");
                    if (!selected) {
                        $("#SubscriptionId").attr("selectedIndex", 1);
                    }
                });
        }

        function loadSubnets(subscriptionId) {
            $("#SubetSpinner").addClass("loading");
            $.get(`/api/subscriptions/${subscriptionId}/subnets`,
                function (subnets) {
                    var dropDownItems = $.map(subnets, function (subnet) {
                        return `<option value="${subnet.id};${subnet.location};${subnet.addressPrefix}">${subnet.vNetName} - ${subnet.location} - ${subnet.name} (${subnet.addressPrefix})</option>`;
                    });

                    $("#Subnets").empty().append(dropDownItems);
                    var valueFromModel = "@Model.SubnetResourceIdLocationAndAddressPrefix";
                    var selectedValue = !valueFromModel || valueFromModel.length === 0
                        ? $("#Subnets option:first").val()
                        : valueFromModel;

                    $("#Subnets").val(selectedValue).change();
                    $("#SubetSpinner").removeClass("loading");
                });
        }

        $(document).ready(function () {
            $("#SubscriptionId").change(function () {
                var subscription = $("#SubscriptionId :selected").val();
                // TODO: Remove log
                console.log("Subscription changed: to " + subscription );
                loadSubnets(subscription);
            });

            loadSubscriptions();

            $('input[type=radio][name=UseEnvironment]').change(function () {
                var useEnvironment = this.value;
                if (useEnvironment === 'true') {
                    $('#EnvironmentSection').show();
                    $('#VNetSection').hide();
                } else {
                    $('#VNetSection').show();
                    $('#EnvironmentSection').hide();
                }
            });
        });
    </script>
}

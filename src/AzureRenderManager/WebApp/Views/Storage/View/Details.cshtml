@using WebApp.Config.Storage
@using WebApp.Models.Storage.Details
@model WebApp.Models.Storage.Details.AssetRepositoryDetailsModel
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContext
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(HttpContext.HttpContext).RequestToken;
    }
}
@{
    ViewBag.Title = Model.Name;
}

@section Breadcrumb
{
<a asp-controller="Storage" asp-action="Index">Storage Repositories</a> &gt;
    <a asp-controller="Storage" asp-action="Details" asp-route-repoId="@Model.Name">@Model.Name</a> &gt;
    <span>Details</span>
}

@await Html.PartialAsync("Storage/Details/DetailsHeaderPartial", Model, new ViewDataDictionary(ViewData)
{
    { "StepName", "details" }
})

@await Html.PartialAsync("Menu/StorageSubMenu", Model, new ViewDataDictionary(ViewData)
{
    { "Step", 1 },
    { "RepoId", Model.Name },
    { "Type", "view" }
})

<div class="storage-details">
    <div class="form-section">
        <div class="section-title">
            <span class="step-index">1.1</span>
            <div class="step-header">
                <h3>Details</h3>
                <p>Overview of the configuration settings.</p>
            </div>
        </div>
        <div class="section-wrapper">
            <div class="section-bar"></div>
            <div class="section-content">
                <div class="form-element">
                    <label asp-for="Name">Name</label>
                    <input asp-for="Name" readonly="readonly"/>
                </div>
                <div class="form-element">
                    <label asp-for="RepositoryType">Type</label>
                    <input asp-for="RepositoryType" readonly="readonly"/>
                </div>
                <div class="form-element">
                    <label asp-for="SubscriptionId">Subscription</label>
                    <input asp-for="SubscriptionId" readonly="readonly"/>
                </div>
                <div class="form-element">
                    <label asp-for="Status">Status</label>
                    <input asp-for="Status" readonly="readonly"/>
                </div>
            </div>
        </div>
    </div>
    <div class="form-section">
        <div class="section-title">
            <span class="step-index">1.2</span>
            <div class="step-header">
                <h3>Subnet</h3>
                <p>Subnet details for the selected configuration including the location.</p>
            </div>
        </div>
        <div class="section-wrapper">
            <div class="section-bar"></div>
            <div class="section-content">
                <div class="form-element">
                    <label asp-for="SubnetName">Name</label>
                    <input asp-for="SubnetName" readonly="readonly"/>
                </div>
                <div class="form-element">
                    <label asp-for="SubnetVNetName">VNet name</label>
                    <input asp-for="SubnetVNetName" readonly="readonly"/>
                </div>
                <div class="form-element">
                    <label asp-for="SubnetResourceId">Resource ID</label>
                    <input asp-for="SubnetResourceId" readonly="readonly"/>
                </div>
                <div class="form-element">
                    <label asp-for="SubnetPrefix">Address prefix</label>
                    <input asp-for="SubnetPrefix" readonly="readonly"/>
                </div>
                <div class="form-element">
                    <label asp-for="SubnetLocation">Location</label>
                    <input asp-for="SubnetLocation" readonly="readonly"/>
                </div>
            </div>
        </div>
    </div>
    @{
        switch (Model.RepositoryType)
        {
            case AssetRepositoryType.AvereCluster:
                <text>
                    @await Html.PartialAsync("Storage/Details/AvereFooterPartial", Model)
                </text>
                break;
            case AssetRepositoryType.NfsFileServer:
                <text>
                    @await Html.PartialAsync("Storage/Details/NfsFooterPartial", Model)
                </text>
                break;
        }
    }
</div>
<p>&nbsp;</p>

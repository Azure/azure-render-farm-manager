@using WebApp.Config.Storage
@using WebApp.Models.Storage.Details
@model WebApp.Models.Storage.Details.NfsFileServerOverviewModel
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContext
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(HttpContext.HttpContext).RequestToken;
    }
}
@{
    ViewBag.Title = Model.Name;
}

@section Breadcrumb
    {
    <a asp-controller="Storage" asp-action="Index">Storage Repositories</a> &gt;
    <a asp-controller="Storage" asp-action="Details" asp-route-repoId="@Model.Name">@Model.Name</a> &gt;
    <span>Details</span>
}

@await Html.PartialAsync("Storage/Details/DetailsHeaderPartial", Model, new ViewDataDictionary(ViewData)
{
    { "StepName", "details" }
})

@await Html.PartialAsync("Menu/StorageSubMenu", Model, new ViewDataDictionary(ViewData)
{
    { "Step", 1 },
    { "RepoId", Model.Name },
    { "Type", "view" }
})

<div class="storage-details">
    <div class="form-section">
        <div class="section-title">
            <span class="step-index">1.1</span>
            <div class="step-header">
                <h3>Connection Details</h3>
                <p></p>
            </div>
        </div>
        <div class="section-wrapper">
            <div class="section-bar"></div>
            <div class="section-content">
                <div class="form-element">
                    <label asp-for="PowerStatus">State</label>
                    <input asp-for="PowerStatus" readonly="readonly" />
                </div>
                <div class="form-element">
                    <label asp-for="PrivateIp">IP Address (Private)</label>
                    <input asp-for="PrivateIp" readonly="readonly" />
                </div>
                <div class="form-element">
                    <label asp-for="SubnetPrefix">Address prefix</label>
                    <input asp-for="SubnetPrefix" readonly="readonly" />
                </div>
                <div class="form-element">
                    <label asp-for="Username">Username</label>
                    <input asp-for="Username" readonly="readonly" />
                </div>
                <div class="form-element">
                    <label asp-for="Password">Password</label>
                    <input asp-for="Password" readonly="readonly" />
                </div>
            </div>
        </div>
    </div>
    <div class="form-section">
        <div class="section-title">
            <span class="step-index">1.2</span>
            <div class="step-header">
                <h3>File Shares</h3>
                <p>File shares associated with this File Server</p>
            </div>
        </div>
        <div class="section-wrapper">
            <div class="section-bar"></div>
            <div class="section-content">
                <div class="form-element">
                    @if (Model.FileShares != null)
                    {
                        <table class="file-shares">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Type</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var share in Model.FileShares)
                                {
                                    <tr>
                                        <td>@share.Name</td>
                                        <td>@share.Type</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <p><b>No file shares have been configured</b></p>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="form-footer">
        <div class="button-bar">
            @if (Model.PowerStatus == "VM running")
            {
                <form asp-action="Shutdown" asp-route-repoId="@Model.Name">
                    <button type="submit">Shutdown Server <i class="fa fa-stop"></i></button>
                </form>
            }
            else
            {
                <form asp-action="Start" asp-route-repoId="@Model.Name">
                    <button type="submit">Start NFS Server <i class="fa fa-play"></i></button>
                </form>
            }
            <button type="button" onclick="performDelete('Storage', 'Delete', '@(Model.Name)')">Delete File Server <i class="fa fa-trash"></i></button>
        </div>
    </div>

</div>
<p>&nbsp;</p>
